[tool.poetry]
name = "ussai"
version = "0.1.0"
description = "USSAI Scrap model"
authors = ["Miroslav Mlynarik <mmlynarik@sk.uss.com>"]

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
pandas = "1.0.1"
cx-Oracle = "7.2.3"
jupyterlab = "^3.2.3"
plotly = "^5.3.1"
torch = "1.9.0"
Django = "3.0.7"
returns = "^0.18.0"
statsmodels = "^0.13.2"
redis = "^4.1.4"
django-dramatiq = "^0.10.0"
periodiq = "^0.12.1"
django-python3-ldap = "^0.13.1"
pyodbc = "4.0.34"
django-sass-processor = "^1.1"
pillow = "9.1.1"
dpd-static-support = "^0.0.5"
dash-bootstrap-components = "1.2.1"
colorlover = "^0.3.0"
django-bootstrap4 = "^22.1"
regex = "^2022.3.2"
cattrs = "^1.0.0"
XlsxWriter = "^3.0.3"
whitenoise = "^6.0.0"
libsass = "^0.21.0"
dash = "2.6.1"
pydantic = "^1.9.0"
python-dotenv = "^0.19.2"
numpy = "1.19.1"
scrapcore = {path = "scrap_core", develop = true}
cokecore = {path = "cokecore", develop = true}
viucore = {path = "viu_core", develop = true}
attr_runtime_validation = {path = "attr_runtime_validation"}
django-extensions = "^3.1.5"
"backports.zoneinfo" = "^0.2.1"
hypothesis = "^6.43.1"
django-selenium-test = "^1.1.0"
wheel = "0.26"
methodtools = "^0.4.5"
TPOT = "^0.11.7"
graphviz = "^0.20"
transformers = "^4.19.2"
watch = "^0.2.7"
watchdog-gevent = "^0.1.1"
watchdog = "^2.1.8"
dramatiq = {extras = ["watch"], version = "^1.13.0"}
pycel = "1.0b22"
openpyxl = "3.0.0"
blackcellmagic = "0.0.2"
werkzeug = "2.0.0"
click = "8.0.0"
toml = "^0.10.2"
modutils = "^0.2.0"
dpd-components = "0.1.0"

[tool.poetry.dev-dependencies]
pre-commit = "^2.15.0"
black = "19.10b0"
pylint = "^2.11.1"
pylint-django = "2.0.15"
pycodestyle = "^2.8.0"
mypy = "0.931"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 110

[mypy]
ignore_missing_imports = true
check_untyped_defs = true
strict_equality = false
"""A setuptools based setup module.

See:
https://packaging.python.org/guides/distributing-packages-using-setuptools/
https://github.com/pypa/sampleproject
"""

from os import path

# Always prefer setuptools over distutils
from setuptools import setup

here = path.abspath(path.dirname(__file__))

with open(path.join(here, "README.md"), encoding="utf-8") as f:
    long_description = f.read()

setup(
    name="scrapcore",
    version="0.0.1",
    package_data={
        "scrap_core": ["py.typed"],
        "scrap_core.datamodel": ["py.typed", "load_full_heat_from_oko.sql", "load_heat_plan_from_iars.sql"],
        "scrap_core.blendmodel": [
            "py.typed",
            "trained_models/blend_model_v1.pth",
            "trained_models/eob_model_v6.pth",
        ],
        "scrap_core.yieldmodel": ["py.typed"],
        "scrap_core.meltabilitymodel": ["py.typed"],
        "scrap_core.optimization": ["py.typed"],
        "scrap_core.correctiontechnologiesmodel": ["py.typed"],
        "scrap_core.evaluation": ["py.typed"],
        "scrap_core.blendmodel.eob_datamodule": ["py.typed"],
        "scrap_core.home_scrap_estimation": [
            "py.typed",
            "estimators/1PIT.json",
            "estimators/DSI.json",
            "estimators/HS.json",
            "estimators/HSB.json",
            "estimators/HST.json",
            "estimators/HSZ.json",
        ],
    },
    packages=[
        "scrap_core",
        "scrap_core.datamodel",
        "scrap_core.blendmodel",
        "scrap_core.home_scrap_estimation",
        "scrap_core.yieldmodel",
        "scrap_core.optimization",
        "scrap_core.meltabilitymodel",
        "scrap_core.correctiontechnologiesmodel",
        "scrap_core.evaluation",
        "scrap_core.datamodel.grades",
        "scrap_core.blendmodel.eob_datamodule",
        "scrap_core.pytorch_balanced_sampler",
        "scrap_core.weightmodel",
    ],
    description="Calculations for scrap model",
    long_description=long_description,
    long_description_content_type="text/markdown",
    install_requires=[
        "torch==1.9.0",
        "torchvision==0.10.0",
        "pytorch-lightning==1.3.5",
        "attrs==20.2.0",
        "cattrs==1.0.0",
        "numpy==1.19.1",
        "tqdm==4.48.2",
        "immutables==0.14",
        "pymssql==2.1.5",
        "python-dotenv==0.20.0",
        "jsonlines==1.2.0",
        "bayesian-optimization==1.1.0",
        "deap==1.3.1",
        "cachetools==4.2.1",
        "pyodbc==4.0.30",
        "spacecutter==0.2.0",
        "torchmetrics==0.3.2",
        "scipy==1.7.3",
        "returns==0.18.0",
    ],
    zip_safe=False,
    entry_points={
        "console_scripts": [
            "generate_blend_model_training_data=scrap_core.generate_blendmodel_training_data:main",
            "pig_iron=scrap_core.pigironanalysis:main",
            "train_eob_model=scrap_core.blendmodel.eob_model_training:main",
            "test_eob_model=scrap_core.blendmodel.eob_model_test:main",
            "train_home_scrap_estimators=scrap_core.home_scrap_estimation.train_home_scrap_estimators:main",
        ]
    },
)

